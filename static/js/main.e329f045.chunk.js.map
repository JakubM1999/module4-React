{"version":3,"sources":["PokemonList.js","Pagination.js","App.js","index.js"],"names":["container","textAlign","h2Style","color","fontFamily","fontWeight","fontSize","pokemonList","pokemon","style","map","p","display","justifyContent","gap","marginLeft","marginRight","marginTop","buttonStyle","borderRadius","border","backgroundColor","padding","width","cursor","Pagination","gotoNextPage","gotoPrevPage","onClick","App","useState","setPokemon","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","loading","setLoading","useEffect","cancel","axios","get","cancelToken","CancelToken","c","then","res","data","next","previous","results","name","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6JAEMA,EAAY,CACdC,UAAU,UAIRC,EAAU,CACZC,MAAO,QACPC,WAAY,qBACZC,WAAY,MACZC,SAAS,QAGE,SAASC,EAAT,GAAiC,IAAXC,EAAU,EAAVA,QACjC,OACI,qBAAKC,MAAOT,EAAZ,SACKQ,EAAQE,KAAI,SAAAC,GAAC,OACV,oBAAIF,MAAOP,EAAX,SAA6BS,GAAJA,Q,UCfnCX,EAAY,CACdY,QAAQ,OACRC,eAAgB,gBAChBC,IAAI,OACJC,WAAW,QACXC,YAAY,QACZC,UAAU,QAIRC,EAAc,CAChBC,aAAc,OACdC,OAAQ,OACRC,gBAAiB,UACjBlB,MAAO,SACPmB,QAAS,OACTC,MAAO,QACPjB,SAAS,OACTkB,OAAO,WAII,SAASC,EAAT,GAAmD,IAA9BC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,aAC9C,OACI,sBAAKlB,MAAOT,EAAZ,UACK2B,GAAgB,wBAAQlB,MAAOS,EAAaU,QAASD,EAArC,sBAChBD,GAAgB,wBAAQjB,MAAOS,EAAaU,QAASF,EAArC,qB,oBCqBdG,MA7Cf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNtB,EADM,KACGuB,EADH,OAE+BD,mBAAS,qCAFxC,mBAENE,EAFM,KAEUC,EAFV,OAGyBH,qBAHzB,mBAGNI,EAHM,KAGOC,EAHP,OAIyBL,qBAJzB,mBAINM,EAJM,KAIOC,EAJP,OAKiBP,oBAAS,GAL1B,mBAKNQ,EALM,KAKGC,EALH,KAgCb,OAvBAC,qBAAU,WAER,IAAIC,EAUJ,OAXAF,GAAW,GAEXG,IAAMC,IAAIX,EAAgB,CACxBY,YAAa,IAAIF,IAAMG,aAAY,SAAAC,GAAC,OAAIL,EAASK,OAChDC,MAAK,SAAAC,GACNT,GAAW,GACXJ,EAAea,EAAIC,KAAKC,MACxBb,EAAeW,EAAIC,KAAKE,UACxBpB,EAAWiB,EAAIC,KAAKG,QAAQ1C,KAAI,SAAAC,GAAC,OAAIA,EAAE0C,YAGlC,kBAAMZ,OACZ,CAACT,IAUDM,EAAgB,aAGjB,qCACA,cAAC,EAAD,CAAa9B,QAASA,IACtB,cAACiB,EAAD,CACEC,aAAcQ,EAdlB,WACED,EAAkBC,IAa2B,KAC3CP,aAAcS,EAXlB,WACEH,EAAkBG,IAU2B,WCxCjDkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e329f045.chunk.js","sourcesContent":["import React from 'react'\n\nconst container = {\n    textAlign:\"center\"\n\n}\n\nconst h2Style = {\n    color: \"Black\",\n    fontFamily: \"Roboto, sans-serif\",\n    fontWeight: \"300\",\n    fontSize:\"20pt\"\n};\n\nexport default function pokemonList({pokemon}) {\n    return (\n        <div style={container}>\n            {pokemon.map(p => (\n                <h2 style={h2Style} key={p}>{p}</h2>\n            ))}\n        </div>\n    )\n}\n","import { Color, yellow } from 'chalk';\nimport React from 'react' \n\nconst container = {\n    display:\"flex\",\n    justifyContent: \"space-between\",\n    gap:\"10px\",\n    marginLeft:\"250px\",\n    marginRight:\"250px\",\n    marginTop:\"50px\"\n\n}\n\nconst buttonStyle = {\n    borderRadius: \"20px\",\n    border: \"none\",\n    backgroundColor: \"#202020\",\n    color: \"Yellow\",\n    padding: \"20px\",\n    width: \"150px\",\n    fontSize:\"15pt\",\n    cursor:\"pointer\"\n\n};\n\nexport default function Pagination({gotoNextPage, gotoPrevPage}) {\n    return (\n        <div style={container}>\n            {gotoPrevPage && <button style={buttonStyle} onClick={gotoPrevPage}>Previous</button>}\n            {gotoNextPage && <button style={buttonStyle} onClick={gotoNextPage}>Next</button>}\n        </div>\n    )\n}\n","import React, {useState, useEffect} from \"react\";\nimport PokemonList from \"./PokemonList\";\nimport Pagination from \"./Pagination\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [pokemon, setPokemon] = useState([])\n  const [currentPageUrl, setCurrentPageUrl] = useState(\"https://pokeapi.co/api/v2/pokemon\")\n  const [nextPageUrl, setNextPageUrl] = useState()\n  const [prevPageUrl, setPrevPageUrl] = useState()\n  const [loading, setLoading] = useState(true)\n\n\n\n  useEffect(() => {\n    setLoading(true)\n    let cancel\n    axios.get(currentPageUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res =>{\n      setLoading(false)\n      setNextPageUrl(res.data.next)\n      setPrevPageUrl(res.data.previous)\n      setPokemon(res.data.results.map(p => p.name))\n    })\n\n    return () => cancel()\n  }, [currentPageUrl])\n\n  function gotoNextPage() {\n    setCurrentPageUrl(nextPageUrl)\n  }\n\n  function gotoPrevPage() {\n    setCurrentPageUrl(prevPageUrl)\n  }\n\n  if(loading) return \"Loading...\"\n\n  return (\n    <>\n    <PokemonList pokemon={pokemon} />\n    <Pagination\n      gotoNextPage={nextPageUrl ? gotoNextPage : null}\n      gotoPrevPage={prevPageUrl ? gotoPrevPage : null}\n    />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}